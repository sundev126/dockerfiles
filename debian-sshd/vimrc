" Vundle 配置
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
    "call vundle#begin('~/some/path/here')

    " let Vundle manage Vundle, required
    Plugin 'VundleVim/Vundle.vim'
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

" 设置UTF8
set encoding=utf-8
set fileencodings=utf-8,gbk,cp936
set fileencoding=utf-8

" 语法高亮
syntax on
" 显示行号
set number
" 显示相对行号
set relativenumber
" 设置tab为4个空格
set tabstop=4
set expandtab
" 编辑模式时，退格键退回缩进的长度
set softtabstop=4
" 每一级缩进的长度
set shiftwidth=4
"自动缩进
set autoindent
set smartindent
set cindent
" 基于缩进或语法进行代码折叠
"set foldmethod=indent
set foldmethod=syntax
" 启动 vim 时关闭折叠代码
set nofoldenable


" 外观界面
" 深色背景
" set background=dark
" 显示状态栏
set laststatus=2
" 设置状态栏显示的数据
function! FileSize()
    let bytes = getfsize(expand("%:p"))
    if bytes <= 0
        return ""
    endif
    if bytes < 1024
        return bytes
    elseif bytes < 1024*1024
        return (bytes/1024) . "K"
    else
        return (bytes/1024/1024) . "M"
    endif
endfunction
set statusline=%t\ %m%r\    "文件名 文件状态
set statusline+=[%{strlen(&fenc)?&fenc:'none'}] "文件编码
set statusline+=\ %{FileSize()}
set statusline+=%=[HEX:%B]
set statusline+=\ %-21(%11(%l/%L%),%-3v\ %P%)
" 高亮显示搜索结果
set hlsearch
" 实时跳转到搜索到的位置
set incsearch
" 忽略大小写
set ignorecase

" vim 行为
set noundofile      " 不创建 .un~ 撤销文件
set nobackup        " 不创建备份文件

" vim 注释颜色
hi comment ctermfg=6
